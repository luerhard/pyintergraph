[tool.poetry]
name = "pyintergraph"
version = "1.3.3"
authors = ["Lukas Erhard <luerhard@googlemail.com>"]
repository = "https://github.com/luerhard/pyintergraph"
homepage = "https://github.com/luerhard/pyintergraph"
description = "Convert Python-Graph-Objects between networkx, python-igraph and graph-tools."
readme="README.md"
license="MIT"
classifiers = [
        "Topic :: Utilities",
        "Intended Audience :: Science/Research",
    ]
packages = [{include = "pyintergraph"}]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
numpy = [{version = ">=1.26", python = ">=3.12"}, {version = ">=1.18", python = "<3.12"}]
networkx = {version = ">=2.4", optional = true}
python-igraph = {version = ">=0.8", optional = true}

[tool.poetry.extras]
networkx = ["networkx"]
python-igraph = ["python-igraph"]
net = ["networkx", "python-igraph"]

[tool.poetry.group.dev.dependencies]
pytest = ">=7"
pytest-cov = ">=4"

[tool.poetry.group.docs.dependencies]
ipython = ">=8.7.0"
sphinx = ">=7.1.0"
ipykernel = ">=6.17.1"
ipywidgets = ">=8.0.2"
sphinx-rtd-theme = ">=1.1.1"
nbsphinx = ">=0.9.3"
sphinx-autodoc-typehints = ">=1.24.0"

[tool.ruff]
fix = true
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "C4", #flake8-comprehensions
  "COM", #flake8-commas
  "D", # pydocstyle
  "E", # pycodestyle
  "EM", # flake8-errmsg
  "F", # pyflakes
  "I", # isort
  "N", # pep8-naming
  "PT", #flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "Q", # flake8-quotes
  "UP", # pyupgrade
]
ignore-init-module-imports = true

[tool.ruff.lint.isort]
force-single-line = true
force-sort-within-sections = true
lines-after-imports = 1

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"docs/**" = ["D"]
"tests/**" = ["D", "F401"]
"pyintergraph/exceptions.py" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length=100

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
